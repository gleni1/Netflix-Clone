{"ast":null,"code":"var _jsxFileName = \"/Users/mariglenpoleshi/Desktop/netflix-clone/netflix-clone/src/Row.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from './axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst base_url = \"https://image.tmdb.org/t/p/original/\";\nconst Row = ({\n  title,\n  fetchUrl\n}) => {\n  _s();\n  const [movies, setMovies] = useState([]);\n  useEffect(() => {\n    async function fetchData() {\n      const request = await axios.get(fetchUrl);\n      setMovies(request.data.results);\n      return request;\n    }\n    fetchData();\n  }, [fetchUrl]);\n  console.log(movies);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"row\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row_posters\",\n      children: movies.map(movie => /*#__PURE__*/_jsxDEV(\"img\", {\n        className: \"row_poster\",\n        src: `${base_url}${movie.poster_path}`,\n        alt: movie.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 17\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n};\n_s(Row, \"MO6b3PSP3RIUqZ8gtSrBZBVtBbs=\");\n_c = Row;\nexport default Row;\nvar _c;\n$RefreshReg$(_c, \"Row\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","base_url","Row","title","fetchUrl","_s","movies","setMovies","fetchData","request","get","data","results","console","log","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","movie","src","poster_path","alt","name","_c","$RefreshReg$"],"sources":["/Users/mariglenpoleshi/Desktop/netflix-clone/netflix-clone/src/Row.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from './axios';\n\nconst base_url = \"https://image.tmdb.org/t/p/original/\";\n\nconst Row = ({title, fetchUrl}) => {\n    const [movies, setMovies] = useState([]);\n\n    useEffect(()=>{\n        async function fetchData(){\n            const request = await axios.get(fetchUrl);\n            setMovies(request.data.results);\n            return request;\n        }\n        fetchData();\n    },[fetchUrl])\n\n    console.log(movies);\n\n  return (\n    <div className='row'>\n        <h2>{title}</h2>\n\n        <div className=\"row_posters\">\n            {movies.map((movie)=>(\n                <img \n                        className='row_poster'\n                    src={`${base_url}${movie.poster_path}`} \n                    alt={movie.name} \n                />\n            ))}\n        </div>\n        \n    </div>\n  )\n}\n\nexport default Row"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,SAAS;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5B,MAAMC,QAAQ,GAAG,sCAAsC;AAEvD,MAAMC,GAAG,GAAGA,CAAC;EAACC,KAAK;EAAEC;AAAQ,CAAC,KAAK;EAAAC,EAAA;EAC/B,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAExCC,SAAS,CAAC,MAAI;IACV,eAAeW,SAASA,CAAA,EAAE;MACtB,MAAMC,OAAO,GAAG,MAAMX,KAAK,CAACY,GAAG,CAACN,QAAQ,CAAC;MACzCG,SAAS,CAACE,OAAO,CAACE,IAAI,CAACC,OAAO,CAAC;MAC/B,OAAOH,OAAO;IAClB;IACAD,SAAS,CAAC,CAAC;EACf,CAAC,EAAC,CAACJ,QAAQ,CAAC,CAAC;EAEbS,OAAO,CAACC,GAAG,CAACR,MAAM,CAAC;EAErB,oBACEN,OAAA;IAAKe,SAAS,EAAC,KAAK;IAAAC,QAAA,gBAChBhB,OAAA;MAAAgB,QAAA,EAAKb;IAAK;MAAAc,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eAEhBpB,OAAA;MAAKe,SAAS,EAAC,aAAa;MAAAC,QAAA,EACvBV,MAAM,CAACe,GAAG,CAAEC,KAAK,iBACdtB,OAAA;QACQe,SAAS,EAAC,YAAY;QAC1BQ,GAAG,EAAG,GAAEtB,QAAS,GAAEqB,KAAK,CAACE,WAAY,EAAE;QACvCC,GAAG,EAAEH,KAAK,CAACI;MAAK;QAAAT,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACnB,CACJ;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACD,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAEL,CAAC;AAEV,CAAC;AAAAf,EAAA,CA9BKH,GAAG;AAAAyB,EAAA,GAAHzB,GAAG;AAgCT,eAAeA,GAAG;AAAA,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}